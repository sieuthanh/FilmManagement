/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package admin.view;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;

import org.hibernate.Session;
import org.hibernate.SessionFactory;

import databasemanager.Company;
import databasemanager.Movie;
import databasemanager.Person;

import admin.Crawler.ImdbCrawlerMovie;
import admin.DAO.HibernateUtil;
import admin.bean.FilmCompany;
import admin.bean.FilmCompanyPrimaryKey;
import admin.bean.FilmDirector;
import admin.bean.FilmDirectorPrimaryKey;
import admin.bean.FilmGenre;
import admin.bean.FilmGenrePrimaryKey;
import admin.bean.FilmStar;
import admin.bean.FilmStarPrimaryKey;
import admin.controller.CompanySearchController;

/**
 * 
 * @author thanh
 */
public class AddMovieFrame extends javax.swing.JFrame implements ActionListener {

	/**
	 * Creates new form AddMovieFrame
	 */
	public static ImdbCrawlerMovie icm = new ImdbCrawlerMovie();

	public AddMovieFrame() {
		initComponents();
	}

	public AddMovieFrame(ImdbCrawlerMovie icm) {
		// TODO Auto-generated constructor stub
		initComponents();
		this.icm = icm;
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed" desc="Generated Code">
	private void initComponents() {

		moviePanel = new javax.swing.JPanel();
		jLabel1 = new javax.swing.JLabel();
		jLabel2 = new javax.swing.JLabel();
		jLabel3 = new javax.swing.JLabel();
		jLabel4 = new javax.swing.JLabel();
		jLabel5 = new javax.swing.JLabel();
		jLabel6 = new javax.swing.JLabel();
		idTextField = new javax.swing.JTextField();
		nameTextField = new javax.swing.JTextField();
		yearTextField = new javax.swing.JTextField();
		runtimeTextField = new javax.swing.JTextField();
		ratingTextField = new javax.swing.JTextField();
		countryTextFiled = new javax.swing.JTextField();
		shortStoryPanel = new javax.swing.JPanel();
		jScrollPane1 = new javax.swing.JScrollPane();
		shortStoryTextArea = new javax.swing.JTextArea();
		longStoryPanel = new javax.swing.JPanel();
		jScrollPane2 = new javax.swing.JScrollPane();
		longStoryArea = new javax.swing.JTextArea();
		OkButton = new javax.swing.JButton();
		CancelButton = new javax.swing.JButton();

		setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

		moviePanel.setBorder(javax.swing.BorderFactory
				.createTitledBorder("Movie"));

		jLabel1.setText("Id");

		jLabel2.setText("Name");

		jLabel3.setText("Year");

		jLabel4.setText("Runtime");

		jLabel5.setText("Rating");

		jLabel6.setText("Country");

		idTextField.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				idTextFieldActionPerformed(evt);
			}
		});

		yearTextField.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				yearTextFieldActionPerformed(evt);
			}
		});

		javax.swing.GroupLayout moviePanelLayout = new javax.swing.GroupLayout(
				moviePanel);
		moviePanel.setLayout(moviePanelLayout);
		moviePanelLayout
				.setHorizontalGroup(moviePanelLayout
						.createParallelGroup(
								javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(
								moviePanelLayout
										.createSequentialGroup()
										.addContainerGap()
										.addGroup(
												moviePanelLayout
														.createParallelGroup(
																javax.swing.GroupLayout.Alignment.LEADING)
														.addComponent(jLabel1)
														.addComponent(jLabel2)
														.addComponent(jLabel3))
										.addGap(18, 18, 18)
										.addGroup(
												moviePanelLayout
														.createParallelGroup(
																javax.swing.GroupLayout.Alignment.LEADING,
																false)
														.addComponent(
																yearTextField,
																javax.swing.GroupLayout.DEFAULT_SIZE,
																206,
																Short.MAX_VALUE)
														.addComponent(
																idTextField)
														.addComponent(
																nameTextField))
										.addPreferredGap(
												javax.swing.LayoutStyle.ComponentPlacement.RELATED,
												javax.swing.GroupLayout.DEFAULT_SIZE,
												Short.MAX_VALUE)
										.addGroup(
												moviePanelLayout
														.createParallelGroup(
																javax.swing.GroupLayout.Alignment.LEADING)
														.addGroup(
																javax.swing.GroupLayout.Alignment.TRAILING,
																moviePanelLayout
																		.createParallelGroup(
																				javax.swing.GroupLayout.Alignment.LEADING)
																		.addComponent(
																				jLabel5)
																		.addComponent(
																				jLabel4))
														.addComponent(
																jLabel6,
																javax.swing.GroupLayout.Alignment.TRAILING))
										.addGap(18, 18, 18)
										.addGroup(
												moviePanelLayout
														.createParallelGroup(
																javax.swing.GroupLayout.Alignment.LEADING,
																false)
														.addComponent(
																runtimeTextField)
														.addComponent(
																ratingTextField)
														.addComponent(
																countryTextFiled,
																javax.swing.GroupLayout.DEFAULT_SIZE,
																194,
																Short.MAX_VALUE))
										.addGap(26, 26, 26)));
		moviePanelLayout
				.setVerticalGroup(moviePanelLayout
						.createParallelGroup(
								javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(
								moviePanelLayout
										.createSequentialGroup()
										.addContainerGap()
										.addGroup(
												moviePanelLayout
														.createParallelGroup(
																javax.swing.GroupLayout.Alignment.BASELINE)
														.addComponent(jLabel1)
														.addComponent(jLabel4)
														.addComponent(
																idTextField,
																javax.swing.GroupLayout.PREFERRED_SIZE,
																javax.swing.GroupLayout.DEFAULT_SIZE,
																javax.swing.GroupLayout.PREFERRED_SIZE)
														.addComponent(
																runtimeTextField,
																javax.swing.GroupLayout.PREFERRED_SIZE,
																javax.swing.GroupLayout.DEFAULT_SIZE,
																javax.swing.GroupLayout.PREFERRED_SIZE))
										.addPreferredGap(
												javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
										.addGroup(
												moviePanelLayout
														.createParallelGroup(
																javax.swing.GroupLayout.Alignment.BASELINE)
														.addComponent(jLabel2)
														.addComponent(jLabel5)
														.addComponent(
																nameTextField,
																javax.swing.GroupLayout.PREFERRED_SIZE,
																javax.swing.GroupLayout.DEFAULT_SIZE,
																javax.swing.GroupLayout.PREFERRED_SIZE)
														.addComponent(
																ratingTextField,
																javax.swing.GroupLayout.PREFERRED_SIZE,
																javax.swing.GroupLayout.DEFAULT_SIZE,
																javax.swing.GroupLayout.PREFERRED_SIZE))
										.addPreferredGap(
												javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
										.addGroup(
												moviePanelLayout
														.createParallelGroup(
																javax.swing.GroupLayout.Alignment.BASELINE)
														.addComponent(jLabel3)
														.addComponent(jLabel6)
														.addComponent(
																yearTextField,
																javax.swing.GroupLayout.PREFERRED_SIZE,
																javax.swing.GroupLayout.DEFAULT_SIZE,
																javax.swing.GroupLayout.PREFERRED_SIZE)
														.addComponent(
																countryTextFiled,
																javax.swing.GroupLayout.PREFERRED_SIZE,
																javax.swing.GroupLayout.DEFAULT_SIZE,
																javax.swing.GroupLayout.PREFERRED_SIZE))
										.addContainerGap(26, Short.MAX_VALUE)));

		shortStoryPanel.setBorder(javax.swing.BorderFactory
				.createTitledBorder("Short Story"));

		shortStoryTextArea.setColumns(20);
		shortStoryTextArea.setRows(5);
		shortStoryTextArea.setLineWrap(true);
		jScrollPane1.setViewportView(shortStoryTextArea);

		javax.swing.GroupLayout shortStoryPanelLayout = new javax.swing.GroupLayout(
				shortStoryPanel);
		shortStoryPanel.setLayout(shortStoryPanelLayout);
		shortStoryPanelLayout
				.setHorizontalGroup(shortStoryPanelLayout
						.createParallelGroup(
								javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(
								javax.swing.GroupLayout.Alignment.TRAILING,
								shortStoryPanelLayout
										.createSequentialGroup()
										.addGap(0, 0, Short.MAX_VALUE)
										.addComponent(
												jScrollPane1,
												javax.swing.GroupLayout.PREFERRED_SIZE,
												536,
												javax.swing.GroupLayout.PREFERRED_SIZE)));
		shortStoryPanelLayout.setVerticalGroup(shortStoryPanelLayout
				.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(
						shortStoryPanelLayout
								.createSequentialGroup()
								.addContainerGap()
								.addComponent(jScrollPane1,
										javax.swing.GroupLayout.DEFAULT_SIZE,
										116, Short.MAX_VALUE)));

		longStoryPanel.setBorder(javax.swing.BorderFactory
				.createTitledBorder("Long Story"));

		longStoryArea.setColumns(20);
		longStoryArea.setRows(5);
		longStoryArea.setLineWrap(true);
		jScrollPane2.setViewportView(longStoryArea);

		javax.swing.GroupLayout longStoryPanelLayout = new javax.swing.GroupLayout(
				longStoryPanel);
		longStoryPanel.setLayout(longStoryPanelLayout);
		longStoryPanelLayout
				.setHorizontalGroup(longStoryPanelLayout
						.createParallelGroup(
								javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(
								javax.swing.GroupLayout.Alignment.TRAILING,
								longStoryPanelLayout
										.createSequentialGroup()
										.addGap(0, 28, Short.MAX_VALUE)
										.addComponent(
												jScrollPane2,
												javax.swing.GroupLayout.PREFERRED_SIZE,
												538,
												javax.swing.GroupLayout.PREFERRED_SIZE)));
		longStoryPanelLayout.setVerticalGroup(longStoryPanelLayout
				.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(
						longStoryPanelLayout
								.createSequentialGroup()
								.addContainerGap()
								.addComponent(jScrollPane2,
										javax.swing.GroupLayout.DEFAULT_SIZE,
										122, Short.MAX_VALUE)));

		OkButton.setText("OK");

		CancelButton.setText("Cancel");
		CancelButton.addActionListener(this);
		OkButton.addActionListener(this);
		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(
				getContentPane());
		getContentPane().setLayout(layout);
		layout.setHorizontalGroup(layout
				.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addComponent(moviePanel, javax.swing.GroupLayout.DEFAULT_SIZE,
						javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
				.addComponent(shortStoryPanel,
						javax.swing.GroupLayout.DEFAULT_SIZE,
						javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
				.addComponent(longStoryPanel,
						javax.swing.GroupLayout.DEFAULT_SIZE,
						javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
				.addGroup(
						javax.swing.GroupLayout.Alignment.TRAILING,
						layout.createSequentialGroup()
								.addContainerGap(
										javax.swing.GroupLayout.DEFAULT_SIZE,
										Short.MAX_VALUE)
								.addComponent(OkButton,
										javax.swing.GroupLayout.PREFERRED_SIZE,
										67,
										javax.swing.GroupLayout.PREFERRED_SIZE)
								.addGap(33, 33, 33).addComponent(CancelButton)
								.addGap(96, 96, 96)));
		layout.setVerticalGroup(layout
				.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(
						layout.createSequentialGroup()
								.addContainerGap()
								.addComponent(moviePanel,
										javax.swing.GroupLayout.PREFERRED_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE,
										javax.swing.GroupLayout.PREFERRED_SIZE)
								.addPreferredGap(
										javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
								.addComponent(shortStoryPanel,
										javax.swing.GroupLayout.PREFERRED_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE,
										javax.swing.GroupLayout.PREFERRED_SIZE)
								.addGap(18, 18, 18)
								.addComponent(longStoryPanel,
										javax.swing.GroupLayout.PREFERRED_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE,
										javax.swing.GroupLayout.PREFERRED_SIZE)
								.addPreferredGap(
										javax.swing.LayoutStyle.ComponentPlacement.RELATED,
										52, Short.MAX_VALUE)
								.addGroup(
										layout.createParallelGroup(
												javax.swing.GroupLayout.Alignment.BASELINE)
												.addComponent(OkButton)
												.addComponent(CancelButton))
								.addGap(19, 19, 19)));

		pack();
	}// </editor-fold>

	private void idTextFieldActionPerformed(java.awt.event.ActionEvent evt) {
		// TODO add your handling code here:
	}

	private void yearTextFieldActionPerformed(java.awt.event.ActionEvent evt) {
		// TODO add your handling code here:
	}

	/**
	 * @param args
	 *            the command line arguments
	 */
	public void start() {
		/* Set the Nimbus look and feel */
		// <editor-fold defaultstate="collapsed"
		// desc=" Look and feel setting code (optional) ">
		/*
		 * If Nimbus (introduced in Java SE 6) is not available, stay with the
		 * default look and feel. For details see
		 * http://download.oracle.com/javase
		 * /tutorial/uiswing/lookandfeel/plaf.html
		 */
		try {
			for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager
					.getInstalledLookAndFeels()) {
				if ("Nimbus".equals(info.getName())) {
					javax.swing.UIManager.setLookAndFeel(info.getClassName());
					break;
				}
			}
		} catch (ClassNotFoundException ex) {
			java.util.logging.Logger.getLogger(AddMovieFrame.class.getName())
					.log(java.util.logging.Level.SEVERE, null, ex);
		} catch (InstantiationException ex) {
			java.util.logging.Logger.getLogger(AddMovieFrame.class.getName())
					.log(java.util.logging.Level.SEVERE, null, ex);
		} catch (IllegalAccessException ex) {
			java.util.logging.Logger.getLogger(AddMovieFrame.class.getName())
					.log(java.util.logging.Level.SEVERE, null, ex);
		} catch (javax.swing.UnsupportedLookAndFeelException ex) {
			java.util.logging.Logger.getLogger(AddMovieFrame.class.getName())
					.log(java.util.logging.Level.SEVERE, null, ex);
		}
		// </editor-fold>

		/* Create and display the form */

		AddMovieFrame x = new AddMovieFrame();
		x.setVisible(true);
		x.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
		Movie movie = new Movie();
		movie = icm.getMovie();
		String shortStory = icm.getShortStory();
		String longStory = icm.getFullStory();
		x.getIdTextField().setText(movie.getId());
		x.getCountryTextFiled().setText(movie.getCountry());
		x.getYearTextField().setText(movie.getYear() + "");
		x.getRatingTextField().setText(movie.getRating() + "");
		x.getRuntimeTextField().setText(movie.getRuntime() + "");
		x.getNameTextField().setText(movie.getName() + "");
		x.getShortStoryTextArea().setText(shortStory);
		x.getLongStoryArea().setText(longStory);

	}

	// Variables declaration - do not modify
	private javax.swing.JButton CancelButton;
	private javax.swing.JButton OkButton;
	private javax.swing.JTextField countryTextFiled;
	private javax.swing.JTextField idTextField;
	private javax.swing.JLabel jLabel1;
	private javax.swing.JLabel jLabel2;
	private javax.swing.JLabel jLabel3;
	private javax.swing.JLabel jLabel4;
	private javax.swing.JLabel jLabel5;
	private javax.swing.JLabel jLabel6;
	private javax.swing.JScrollPane jScrollPane1;
	private javax.swing.JScrollPane jScrollPane2;
	private javax.swing.JTextArea longStoryArea;
	private javax.swing.JPanel longStoryPanel;
	private javax.swing.JPanel moviePanel;
	private javax.swing.JTextField nameTextField;
	private javax.swing.JTextField ratingTextField;
	private javax.swing.JTextField runtimeTextField;
	private javax.swing.JPanel shortStoryPanel;
	private javax.swing.JTextArea shortStoryTextArea;
	private javax.swing.JTextField yearTextField;

	public javax.swing.JTextField getCountryTextFiled() {
		return countryTextFiled;
	}

	public void setCountryTextFiled(javax.swing.JTextField countryTextFiled) {
		this.countryTextFiled = countryTextFiled;
	}

	public javax.swing.JTextField getIdTextField() {
		return idTextField;
	}

	public void setIdTextField(javax.swing.JTextField idTextField) {
		this.idTextField = idTextField;
	}

	public javax.swing.JTextArea getLongStoryArea() {
		return longStoryArea;
	}

	public void setLongStoryArea(javax.swing.JTextArea longStoryArea) {
		this.longStoryArea = longStoryArea;
	}

	public javax.swing.JTextField getNameTextField() {
		return nameTextField;
	}

	public void setNameTextField(javax.swing.JTextField nameTextField) {
		this.nameTextField = nameTextField;
	}

	public javax.swing.JTextField getRatingTextField() {
		return ratingTextField;
	}

	public void setRatingTextField(javax.swing.JTextField ratingTextField) {
		this.ratingTextField = ratingTextField;
	}

	public javax.swing.JTextField getRuntimeTextField() {
		return runtimeTextField;
	}

	public void setRuntimeTextField(javax.swing.JTextField runtimeTextField) {
		this.runtimeTextField = runtimeTextField;
	}

	public javax.swing.JTextArea getShortStoryTextArea() {
		return shortStoryTextArea;
	}

	public void setShortStoryTextArea(javax.swing.JTextArea shortStoryTextArea) {
		this.shortStoryTextArea = shortStoryTextArea;
	}

	public javax.swing.JTextField getYearTextField() {
		return yearTextField;
	}

	public void setYearTextField(javax.swing.JTextField yearTextField) {
		this.yearTextField = yearTextField;
	}

	public void filmCompanyLinkDataPrepare(Movie movie,
			ArrayList<Company> company, ArrayList<FilmCompany> filmCompanyLink) {
		FilmCompanyPrimaryKey fcpk;
		FilmCompany filmCompany;
		for (int i = 0; i < company.size(); i++) {
			filmCompany = new FilmCompany();
			fcpk = new FilmCompanyPrimaryKey(movie.getId(), company.get(i)
					.getId());
			filmCompany.setFilmCompanyPrimaryKey(fcpk);
			filmCompanyLink.add(filmCompany);
		}
	}

	public void filmDirectorLinkDataPrepare(Movie movie,
			ArrayList<Person> person, ArrayList<FilmDirector> filmDirectorLink) {
		FilmDirectorPrimaryKey fdpk;
		FilmDirector filmDirector;
		for (int i = 0; i < person.size(); i++) {
			if (person.get(i).isDirector()) {
				filmDirector = new FilmDirector();
				fdpk = new FilmDirectorPrimaryKey(movie.getId(), person.get(i)
						.getId());
				filmDirector.setFilmDirectorPrimaryKey(fdpk);
				filmDirectorLink.add(filmDirector);
			}
		}

	}

	public void filmStarLinkDataPrepare(Movie movie, ArrayList<Person> person,
			ArrayList<FilmStar> filmStarLink) {
		FilmStarPrimaryKey fspk;
		FilmStar filmStar;
		for (int i = 0; i < person.size(); i++) {
			if (person.get(i).isStar()) {
				filmStar = new FilmStar();
				fspk = new FilmStarPrimaryKey(movie.getId(), person.get(i)
						.getId());
				filmStar.setFilmStarPrimaryKey(fspk);
				filmStarLink.add(filmStar);
			}
		}

	}

	public void filmGenreLinkDataPrepare(Movie movie, ArrayList genre,
			ArrayList<FilmGenre> filmGenreLink) {
		FilmGenrePrimaryKey fgpk;
		FilmGenre filmGenre;
		for (int i = 0; i < genre.size(); i++) {
			filmGenre = new FilmGenre();
			fgpk = new FilmGenrePrimaryKey(movie.getId(), (String) genre.get(i));
			filmGenre.setFilmGenrePrimaryKey(fgpk);
			filmGenreLink.add(filmGenre);
		}
	}

	@Override
	public void actionPerformed(ActionEvent e) {
		// TODO Auto-generated method stub
		String ac = e.getActionCommand();
		if (ac.equals("OK")) {

			HibernateUtil hu = new HibernateUtil();
			SessionFactory sessionfactory = hu.getSessionFactory();
			CompanySearchController companySearchController = new CompanySearchController(
					hu, sessionfactory);
			Session session = sessionfactory.openSession();

			// Khai bao cac bean

			ArrayList<Company> company = new ArrayList<Company>();
			ArrayList<Person> person = new ArrayList<Person>();
			Movie movie = new Movie();
			ArrayList genre = new ArrayList();
			ArrayList<FilmCompany> filmCompanyLink = new ArrayList<FilmCompany>();
			ArrayList<FilmDirector> filmDirectorLink = new ArrayList<FilmDirector>();
			ArrayList<FilmGenre> filmGenreLink = new ArrayList<FilmGenre>();
			ArrayList<FilmStar> filmStarLink = new ArrayList<FilmStar>();

			// Prepare data
			company = AddMovieFrame.icm.getCompany();
			person = AddMovieFrame.icm.getPerson();
			for (int i = 0; i < person.size(); i++) {
				System.out.println(person.get(i).toString());
			}
//			movie = AddMovieFrame.icm.getMovie();
//			genre = AddMovieFrame.icm.getGenre();
//			filmCompanyLinkDataPrepare(movie, company, filmCompanyLink);
//			filmDirectorLinkDataPrepare(movie, person, filmDirectorLink);
//			filmGenreLinkDataPrepare(movie, genre, filmGenreLink);
//			filmStarLinkDataPrepare(movie, person, filmStarLink);
//
//			// Save to db process
//			for (int i = 0; i < company.size(); i++) {
//				session.save(company.get(i));
//			}
//			for (int i = 0; i < person.size(); i++) {
//				session.save(person.get(i));
//			}
//
//			session.merge(movie);
//
//			for (int i = 0; i < filmCompanyLink.size(); i++) {
//
//				session.merge(filmCompanyLink.get(i));
//
//			}
//			for (int i = 0; i < filmDirectorLink.size(); i++) {
//				session.save(filmDirectorLink.get(i));
//			}
//			for (int i = 0; i < filmGenreLink.size(); i++) {
//				session.save(filmGenreLink.get(i));
//			}
//			for (int i = 0; i < filmStarLink.size(); i++) {
//				session.save(filmStarLink.get(i));
//			}
//			session.beginTransaction().commit();
//			session.close();
//			System.out.println("done");

		}
		if (ac.equals("Cancel")) {
			setVisible(false);
			dispose();

		}
	}

	// End of variables declaration

}
