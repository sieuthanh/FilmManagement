/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package checkout;

import java.awt.event.ActionEvent;
import java.io.IOException;
import java.util.ArrayList;

import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

import jxl.write.WriteException;

import org.hibernate.Criteria;
import org.hibernate.Session;
import org.hibernate.SessionFactory;
import org.hibernate.criterion.Disjunction;
import org.hibernate.criterion.Restrictions;

import wom.MainWindow;

import bill.BillElement;
import bill.WriteExcel;

import admin.DAO.HibernateUtil;

import cart.Cart;
import databasemanager.CartElement;
import databasemanager.Disk;
import databasemanager.MoneyUnit;
import databasemanager.Movie;

/**
 * 
 * @author thanh
 */
public class CheckoutFrame extends javax.swing.JFrame {

	/**
	 * Creates new form CheckoutFrame
	 */
	public CheckoutFrame(Cart cart) {
		initComponents(cart);
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	private Object[] colname = new Object[] { "Film Name", "Size", "Quantity",
			"Amount" };
	private Object[][] data = {};
	private DefaultTableModel model = new DefaultTableModel(data, colname) {
		@Override
		public Class getColumnClass(int col) {
			Class returnValue;
			if ((col >= 0) && (col < getColumnCount())) {
				returnValue = getValueAt(0, col).getClass();
			} else {
				returnValue = Object.class;
			}
			return returnValue;
		}

		@Override
		// disable table's editable mode
		public boolean isCellEditable(int row, int col) {
			return false;
		}
	};

	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed"
	// desc="Generated Code">//GEN-BEGIN:initComponents
	private void initComponents(Cart cart) {
		billElementList = new ArrayList<BillElement>();
		jScrollPane1 = new javax.swing.JScrollPane();
		jTable1 = new javax.swing.JTable();
		jLabel1 = new javax.swing.JLabel();
		jLabel3 = new javax.swing.JLabel();
		jLabel2 = new javax.swing.JLabel();
		jLabel4 = new javax.swing.JLabel();
		jButton1 = new javax.swing.JButton();
		jButton2 = new javax.swing.JButton();
		// Get list cart element and add to model
		// colname = new Object[] { "Image", "Film Name", "Size",
		// "Quantity", "Amount" };
		String filmName, size, quantity, amount;
		ArrayList<CartElement> cartElementList = cart.getCp()
				.getCartElementList();
		HibernateUtil hu = new HibernateUtil();
		SessionFactory sf = hu.getSessionFactory();
		CartElement ce = new CartElement();
		int total = 0;
		for (int i = 0; i < cartElementList.size(); i++) {
			ce = cartElementList.get(i);
			Session session = sf.openSession();
			Criteria filmCriteria = session.createCriteria(Movie.class);
			Criteria diskCriteria = session.createCriteria(Disk.class);
			Criteria moneyUnitCriteria = session.createCriteria(MoneyUnit.class);
			MoneyUnit mu = (MoneyUnit) moneyUnitCriteria.uniqueResult();
			filmCriteria.add(Restrictions.eq("id", ce.getFilmId()));
			Movie movie = (Movie) filmCriteria.uniqueResult();
			diskCriteria.add(Restrictions.eq("filmId", ce.getFilmId()));
			Disk disk = (Disk) diskCriteria.uniqueResult();
			session.close();
			filmName = movie.getName();
			size = disk.getDiskPerMovie();
			quantity = ce.getDiskAmount() + "";
			amount = Integer.parseInt(size) * Integer.parseInt(quantity) * mu.getUsd()
					+ "";
			total = total + Integer.parseInt(amount);
			amount = amount + " USD";
			model.addRow(new Object[] { filmName, size, quantity, amount });
			BillElement be = new BillElement();
			be.setFilmName(filmName);
			be.setAmount(amount);
			be.setQuantity(quantity);
			be.setSize(size);
			billElementList.add(be);
		}
		setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

		jTable1.setModel(model);
		jScrollPane1.setViewportView(jTable1);

		jLabel1.setText("Total");

		jLabel3.setText(total + "");

		jButton1.setText("Print Bill");
		jButton1.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				try {
					jButton1ActionPerformed(evt);
				} catch (WriteException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				} catch (IOException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
			}
		});

		jButton2.setText("Continue shopping");
		jButton2.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jButton2ActionPerformed(evt);
			}
		});
		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(
				getContentPane());
		getContentPane().setLayout(layout);
		layout.setHorizontalGroup(layout
				.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(
						javax.swing.GroupLayout.Alignment.TRAILING,
						layout.createSequentialGroup()
								.addContainerGap(
										javax.swing.GroupLayout.DEFAULT_SIZE,
										Short.MAX_VALUE).addComponent(jLabel1)
								.addGap(32, 32, 32).addComponent(jLabel3)
								.addGap(76, 76, 76))
				.addGroup(
						layout.createSequentialGroup()
								.addGroup(
										layout.createParallelGroup(
												javax.swing.GroupLayout.Alignment.LEADING)
												.addGroup(
														layout.createSequentialGroup()
																.addGap(18, 18,
																		18)
																.addComponent(
																		jScrollPane1,
																		javax.swing.GroupLayout.PREFERRED_SIZE,
																		452,
																		javax.swing.GroupLayout.PREFERRED_SIZE))
												.addGroup(
														layout.createSequentialGroup()
																.addGap(54, 54,
																		54)
																.addComponent(
																		jButton1,
																		javax.swing.GroupLayout.PREFERRED_SIZE,
																		107,
																		javax.swing.GroupLayout.PREFERRED_SIZE)
																.addGap(38, 38,
																		38)
																.addComponent(
																		jButton2)))
								.addContainerGap(37, Short.MAX_VALUE)));
		layout.setVerticalGroup(layout
				.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(
						layout.createSequentialGroup()
								.addContainerGap()
								.addComponent(jScrollPane1,
										javax.swing.GroupLayout.PREFERRED_SIZE,
										91,
										javax.swing.GroupLayout.PREFERRED_SIZE)
								.addPreferredGap(
										javax.swing.LayoutStyle.ComponentPlacement.RELATED)
								.addGroup(
										layout.createParallelGroup(
												javax.swing.GroupLayout.Alignment.BASELINE)
												.addComponent(jLabel1)
												.addComponent(jLabel3))
								.addGap(18, 18, 18)
								.addGroup(
										layout.createParallelGroup(
												javax.swing.GroupLayout.Alignment.BASELINE)
												.addComponent(
														jButton2,
														javax.swing.GroupLayout.PREFERRED_SIZE,
														59,
														javax.swing.GroupLayout.PREFERRED_SIZE)
												.addComponent(
														jButton1,
														javax.swing.GroupLayout.PREFERRED_SIZE,
														59,
														javax.swing.GroupLayout.PREFERRED_SIZE))
								.addContainerGap(22, Short.MAX_VALUE)));

		pack();
	}// </editor-fold>//GEN-END:initComponents

	public ArrayList<BillElement> getBillElementList() {
		return billElementList;
	}

	public void setBillElementList(ArrayList<BillElement> billElementList) {
		this.billElementList = billElementList;
	}

	protected void jButton2ActionPerformed(ActionEvent evt) {
		// TODO Auto-generated method stub
		setVisible(false);
		dispose();
	}

	protected void jButton1ActionPerformed(ActionEvent evt)
			throws WriteException, IOException {
		// TODO Auto-generated method stub
		setVisible(true);
		dispose();
		JFrame jf = new InputVipMemberId(billElementList);
		jf.setLocationRelativeTo(null);
		jf.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
		jf.setVisible(true);
	}

	/**
	 * @param args
	 *            the command line arguments
	 */

	// Variables declaration - do not modify//GEN-BEGIN:variables
	private javax.swing.JButton jButton1;
	private javax.swing.JButton jButton2;
	private javax.swing.JLabel jLabel1;
	private javax.swing.JLabel jLabel2;
	private javax.swing.JLabel jLabel3;
	private javax.swing.JLabel jLabel4;
	private javax.swing.JScrollPane jScrollPane1;
	private javax.swing.JTable jTable1;
	public static ArrayList<BillElement> billElementList;
	// End of variables declaration//GEN-END:variables
}
