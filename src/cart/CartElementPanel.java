/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package cart;

import java.awt.Color;
import java.awt.Component;
import java.awt.Font;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;

import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JRootPane;

import org.hibernate.Criteria;
import org.hibernate.Session;
import org.hibernate.SessionFactory;
import org.hibernate.criterion.Restrictions;

import wom.MainWindow;

import admin.DAO.HibernateUtil;

import moviedisplaypanel.ImageLabel;

import databasemanager.CartElement;
import databasemanager.Disk;
import databasemanager.MoneyUnit;
import databasemanager.Movie;

/**
 * 
 * @author thanh
 */
public class CartElementPanel extends javax.swing.JPanel {

	/**
	 * Creates new form CartPanel
	 */
	HibernateUtil hu;

	public CartElementPanel(CartElement ce) {

		initComponents(ce);
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed"
	// desc="Generated Code">//GEN-BEGIN:initComponents
	private void initComponents(CartElement ce) {
		final CartElement tmp1 = ce;

		hu = new HibernateUtil();
		final SessionFactory sf = hu.getSessionFactory();
		cartElementFilmImage = new javax.swing.JLabel();
		cartElementFilmName = new javax.swing.JLabel();
		cartElementPrice = new javax.swing.JLabel();
		jLabel1 = new JLabel("+");
		jLabel1.addMouseListener(new MouseAdapter() {
			public void mouseClicked(MouseEvent e) {
				String fimlId = tmp1.getFilmId();
				Session session = sf.openSession();
				Criteria criteria = session.createCriteria(CartElement.class);
				criteria.add(Restrictions.eq("filmId", tmp1.getFilmId()));
				CartElement cartElement = (CartElement) criteria.uniqueResult();
				cartElement.setDiskAmount(cartElement.getDiskAmount() + 1);
				session.saveOrUpdate(cartElement);
				session.beginTransaction().commit();
				if (MainWindow.cartClick != null) {
					if (MainWindow.cartClick.isOpen) {

						MainWindow.cartClick.setVisible(false);
						MainWindow.cartClick.dispose();
						System.gc();
						MainWindow.cartClick = new Cart();
						MainWindow.cartClick.setVisible(true);
						MainWindow.cartClick.isOpen = true;
						// MainWindow.cartClick.setVisible(true);
					} else {
						MainWindow.cartClick = new Cart();
						MainWindow.cartClick.setVisible(true);
						MainWindow.cartClick.isOpen = true;
					}
				}
			}
		});
		jLabel2 = new JLabel("-");
		jLabel2.addMouseListener(new MouseAdapter() {
			public void mouseClicked(MouseEvent e) {

				String fimlId = tmp1.getFilmId();
				Session session = sf.openSession();
				Criteria criteria = session.createCriteria(CartElement.class);
				criteria.add(Restrictions.eq("filmId", tmp1.getFilmId()));

				CartElement cartElement = (CartElement) criteria.uniqueResult();
				if (cartElement.getDiskAmount() > 1) {
					cartElement.setDiskAmount(cartElement.getDiskAmount() - 1);
					session.saveOrUpdate(cartElement);
					session.beginTransaction().commit();
					session.close();
				} else {
					int sql = session.createSQLQuery(
							"delete from cartelement where filmId = '"
									+ tmp1.getFilmId() + "'").executeUpdate();
					session.beginTransaction().commit();
					session.close();
				}

				if (MainWindow.cartClick != null) {
					if (MainWindow.cartClick.isOpen) {

						MainWindow.cartClick.setVisible(false);
						MainWindow.cartClick.dispose();
						System.gc();
						MainWindow.cartClick = new Cart();
						MainWindow.cartClick.setVisible(true);
						MainWindow.cartClick.isOpen = true;
						// MainWindow.cartClick.setVisible(true);
					} else {
						MainWindow.cartClick = new Cart();
						MainWindow.cartClick.setVisible(true);
						MainWindow.cartClick.isOpen = true;
					}
					if (MainWindow.cartClick.isOpen
							&& MainWindow.cartClick.getCp()
									.getCartElementList().size() < 1) {
						MainWindow.cartClick.setVisible(false);
						MainWindow.cartClick.dispose();
						System.gc();
						JOptionPane.showMessageDialog(null,
								"Your cart is empty");
					}
				}
			}
		});
		setPreferredSize(new java.awt.Dimension(220, 80));
		setRequestFocusEnabled(false);
		// Film Image
		ImageLabel tmp = new ImageLabel("data/Films/" + ce.getFilmId()
				+ "/0.jpg", 42, 63);
		cartElementFilmImage = tmp;
		// film Name
		Session session = sf.openSession();
		Criteria filmCriteria = session.createCriteria(Movie.class);
		Criteria diskCriteria = session.createCriteria(Disk.class);
		
		filmCriteria.add(Restrictions.eq("id", ce.getFilmId()));
		Movie movie = (Movie) filmCriteria.uniqueResult();
		diskCriteria.add(Restrictions.eq("filmId", ce.getFilmId()));
		Disk disk = (Disk) diskCriteria.uniqueResult();
		Criteria moneyUnitCriteria = session.createCriteria(MoneyUnit.class);
		MoneyUnit mu = (MoneyUnit) moneyUnitCriteria.uniqueResult();
		session.close();

		cartElementFilmName.setText(movie.getName().toUpperCase());
		cartElementPrice.setForeground(new Color(0x707070));
		// price
		String price;
		if (ce.getDiskAmount() == 1) {
			price = Integer.parseInt(disk.getDiskPerMovie()) * mu.getUsd() + " USD";

		} else {
			price = ce.getDiskAmount() + " x "
					+ Integer.parseInt(disk.getDiskPerMovie()) * mu.getUsd() + " USD";

		}
		cartElementFilmName.setFont(Font.decode("arial, clean, sans-serif"));
		cartElementPrice.setFont(Font.decode("arial, clean, sans-serif"));
		cartElementPrice.setText(price);

		// Layout
		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
		this.setLayout(layout);

		layout.setHorizontalGroup(layout
				.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(
						layout.createSequentialGroup()
								.addContainerGap()
								.addComponent(cartElementFilmImage)
								.addGap(18, 18, 18)
								.addGroup(
										layout.createParallelGroup(
												javax.swing.GroupLayout.Alignment.LEADING)
												.addComponent(cartElementPrice)
												.addComponent(
														cartElementFilmName)
												.addGroup(
														layout.createSequentialGroup()
																.addComponent(
																		jLabel1)
																.addPreferredGap(
																		javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																.addComponent(
																		jLabel2)))
								.addContainerGap(83, Short.MAX_VALUE)));
		layout.setVerticalGroup(layout
				.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(
						layout.createSequentialGroup()
								.addContainerGap()
								.addGroup(
										layout.createParallelGroup(
												javax.swing.GroupLayout.Alignment.TRAILING,
												false)
												.addComponent(
														cartElementFilmImage,
														javax.swing.GroupLayout.DEFAULT_SIZE,
														javax.swing.GroupLayout.DEFAULT_SIZE,
														Short.MAX_VALUE)
												.addGroup(
														layout.createSequentialGroup()
																.addComponent(
																		cartElementFilmName)
																.addPreferredGap(
																		javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																.addComponent(
																		cartElementPrice)
																.addPreferredGap(
																		javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																.addGroup(
																		layout.createParallelGroup(
																				javax.swing.GroupLayout.Alignment.BASELINE)
																				.addComponent(
																						jLabel1)
																				.addComponent(
																						jLabel2))))
								.addContainerGap(54, Short.MAX_VALUE)));
	}// </editor-fold>//GEN-END:initComponents
		// Variables declaration - do not modify//GEN-BEGIN:variables

	private javax.swing.JLabel cartElementFilmImage;
	private javax.swing.JLabel cartElementFilmName;
	private javax.swing.JLabel cartElementPrice;
	private javax.swing.JLabel jLabel1;
	private javax.swing.JLabel jLabel2;

	// End of variables declaration//GEN-END:variables
	public static void main(String[] args) {
		JFrame jf = new JFrame();
		CartElement ce = new CartElement();
		ce.setFilmId("1179034");
		ce.setDiskAmount(3);
		CartElementPanel cep = new CartElementPanel(ce);
		jf.add(cep);
		jf.setSize(220, 80);

		jf.setLocation(200, 200);
		jf.setVisible(true);
	}
}
